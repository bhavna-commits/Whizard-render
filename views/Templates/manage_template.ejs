<!DOCTYPE html>
<html lang="en">

<head>
	<meta http-equiv="content-type" content="text/html;charset=UTF-8" />
	<meta charset="UTF-8" />
	<title>Pages - Admin Dashboard UI Kit - Cards</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<!-- <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css"> -->
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
	<link href="assets/plugins/pace/pace-theme-flash.css" rel="stylesheet" type="text/css" />
	<link href="assets/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
	<link href="assets/plugins/jquery-scrollbar/jquery.scrollbar.css" rel="stylesheet" type="text/css" media="screen" />
	<link href="assets/plugins/select2/css/select2.min.css" rel="stylesheet" type="text/css" media="screen" />
	<!-- <link class="main-stylesheet" href="pages/css/themes/corporate.css" rel="stylesheet" type="text/css" /> -->
	<!-- Please remove the file below for production: Contains demo classes -->
	<!-- <link class="main-stylesheet" href="assets/css/style.css" rel="stylesheet" type="text/css" /> -->
	<link rel="preconnect" href="https://fonts.googleapis.com" />
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
	<link href="https://fonts.googleapis.com/css2?family=Figtree:ital,wght@0,300..900;1,300..900&family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet" />
	<link class="main-stylesheet" href="assets/css/style.css" rel="stylesheet" type="text/css" />
	<link href="styles/style.css" rel="stylesheet" type="text/css" />
	<link href="styles/template.css" rel="stylesheet" type="text/css" />
	<script src="https://cdn.tailwindcss.com"></script>
</head>

<body>
	<!-- Loader HTML -->
	<div id="loader" class="loader">
		<div class="w-full h-full flex justify-center items-center">
			<img src="/assets/img/Wizard_logo.png" alt="Whizard Logo" class="animate-pulse loading-image" />
		</div>
	</div>
	
	<!-- Sidebar -->
	<div class="layout-container">
		<nav class=" sidebar ">
			<div class="logo py-3">
				<img onclick="location.href = '/'" class="cursor-pointer" src="/assets/img/Wizard_logo.png" alt="Whizard Logo" />
			</div>
			<ul class="space-y-4 mt-2">
				<li>
					<a href="/" class=""><span class="icon"><i class="fas fa-chart-line"></i></span>
						Dashboard</a>
				</li>
				<li>
					<a href="/chats"><span class="icon"><i class="fa-regular fa-comment"></i></span>
						Chats</a>
				</li>
				<li>
					<a href="/contact-list"><span class="icon "><i class="fa-regular fa-address-book"></i></span>
						
						Contact List</a>
				</li>
				<li>
					<a href="/template"><span class="icon active"><i class="fa-regular fa-envelope-open"></i></span>
						Template</a>
				</li>
				<li>
					<a href="/settings"><span class="icon"><i class="fa-regular fa-user"></i></span>
						Settings</a>
				</li>
				<li>
					<a href="/reports/campaign-list"><span class="icon"><i class="fa-regular fa-chart-bar"></i></span>
						Reports</a>
				</li>
			</ul>
			<div class=" user-profile text-white flex justify-center items-center text-center">
				<% if (photo) { %>
				<img src="/<%= photo %>" alt="User Profile" class="user-profile-img" onclick="toggleDropdown()" />
				<% } else { %>
				<!-- Extract and display the initials -->
				<div class="user-profile-name bg-[<%= color %>]" onclick="toggleDropdown()">
					<% let initials = name.split(' ').map(n => n[0].toUpperCase()).join(''); %>
					<%= initials %>
				</div>
				<% } %>
				<div id="dropdownMenu" class="account-menu hidden">
					<a href="/settings/profile">Profile</a>
					<button onclick="logout()">Logout</button>
				</div>
			</div>
			
			
			<script>
				function toggleDropdown () {
					const dropdownMenu = document.getElementById('dropdownMenu');
					const sidebar = document.querySelector('.sidebar');
					
					dropdownMenu.classList.toggle('hidden');
					
					if (dropdownMenu.classList.contains('hidden')) {
						sidebar.style.overflow = 'auto';
					} else {
						sidebar.style.overflow = 'visible';
					}
				}
				
				async function logout () {
					try {
						const response = await fetch('/api/users/logout', {
							method: 'POST',
							credentials: 'same-origin'
						});
						
						if (response.ok) {
							window.location.href = '/login';
						} else {
							alert('Error logging out.');
						}
					} catch (err) {
						console.error('Error:', err);
						alert('Error logging out.');
					}
				}
				
				// Close the dropdown if clicked outside
				window.onclick = function (event) {
					const dropdown = document.getElementById("dropdownMenu");
					if (!event.target.closest('.user-profile')) {
						dropdown.classList.add("hidden");
					}
				};
			</script>
		</nav>
		<!-- END SIDEBAR MENU TOP TRAY CONTENT-->
		
		<!-- START PAGE-CONTAINER -->
		<div class="main-content p-3 ">
			<!-- END HEADER -->
			<div class="logo flex justify-between items-center mt-1">
				<div class="">
					<!-- START BREADCRUMB -->
					<nav class="flex" aria-label="Breadcrumb">
						
						<div class="flex items-center">
							<a href="/" class="text-gray-500 hover:text-gray-700 text-xl font-medium">Dashboard</a>
							<svg class="w-4 h-4 mx-2 text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
								<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L11.586 10 7.293 5.707a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
							</svg>
						</div>
						
						<div class="flex items-center">
							<a href="/template" class="text-red-600 hover:text-gray-700 text-xl font-medium">Templates</a>
						</div>
						
					</nav>
					<!-- END BREADCRUMB -->
					
				</div>
				<!-- END BREADCRUMB -->
				<button class="bg-black p-2 flex items-center rounded-lg text-lg text-white font-thin " onclick="document.location='create-template'">
					<i class="fa-solid fa-plus px-2"></i>
					Create new template
				</button>
			</div>
			<div class="flex justify-between items-center mt-4">
				<div class="flex items-center justify-start">
					<h6 class="pr-2 text-black text-lg">List of templates</h6>
					<div class="relative flex items-center bg-gray-200 w-[5rem] h-8 rounded-full p-1">
						<!-- Toggle Button -->
						<div id="toggle" class="absolute w-8 h-6 bg-white rounded-full transform transition-transform duration-300"></div>
						
						<!-- List Icon -->
						<i id="option1" class="fas fa-list text-red-500 cursor-pointer z-10 ml-2"></i>
						
						<!-- Grid Icon -->
						<i id="option2" class="fas fa-th text-gray-400 cursor-pointer z-10 ml-[15px] mr-2"></i>
					</div>
				</div>
				
				<div class="flex justify-end items-center">
					<div id="show-modal" class="px-4 filter cursor-pointer flex text-gray-500 hover:text-gray-700 items-center" onclick="openModal()">
						<!-- <i class="fa fa-filter" ></i> -->
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="h-5 w-5">
							<path fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" d="M3 4h18L14 11v7l-4 2v-9L3 4z" />
						</svg>
						<span class="ml-1">Filter</span>
					</div>
					<button type="button" class="flex items-center bg-blue-600 text-white px-4 py-2 rounded" onclick="getStatus()">
						<i class="fas fa-sync mr-2"></i>Sync Facebook
					</button>
				</div>
			</div>
			
			<!-- Templates container -->
			<div id="template-container">
				<!-- List View (default) -->
				<div id="list-view" class="block">
					<%- include('partials/templates-table') %>
				</div>
				
				<!-- Grid View -->
				<div id="grid-view" class="hidden">
					<%- include('partials/templates-cards') %>
				</div>
			</div>
			
			<script>
				const toggle = document.getElementById('toggle');
				const option1 = document.getElementById('option1');
				const option2 = document.getElementById('option2');
				const listView = document.getElementById('list-view');
				const gridView = document.getElementById('grid-view');
				
				// Default active state for list view (left position)
				let isListView = true;
				
				// Event listener for List Icon
				option1.addEventListener('click', () => {
					if (!isListView) {
						toggle.classList.remove('translate-x-9'); // Move to the left
						toggle.classList.add('translate-x-0');
						option1.classList.add('text-red-500');
						option2.classList.remove('text-red-500');
						isListView = true;
						
						// Show list view, hide grid view
						listView.classList.remove('hidden');
						listView.classList.add('block');
						gridView.classList.add('hidden');
						gridView.classList.remove('block');
					}
				});
				
				// Event listener for Grid Icon
				option2.addEventListener('click', () => {
					if (isListView) {
						toggle.classList.remove('translate-x-0'); // Move to the right
						toggle.classList.add('translate-x-9');
						option2.classList.add('text-red-500');
						option1.classList.remove('text-red-500');
						isListView = false;
						
						// Show grid view, hide list view
						gridView.classList.remove('hidden');
						gridView.classList.add('block');
						listView.classList.add('hidden');
						listView.classList.remove('block');
					}
				});
				const timestampElements = document.querySelectorAll("[data-timestamp]");
				
				timestampElements.forEach((element) => {
					const timestamp = parseInt(element.getAttribute("data-timestamp"), 10);
					
					const date = new Date(timestamp);
					const formattedDate = date.toLocaleDateString("en-US", {
						year: "numeric",
						month: "short",
						day: "numeric",
						hour: "2-digit",
						minute: "2-digit",
					});
					
					const parts = formattedDate.split(",");
					const finalDate =
						parts.length > 1 ?
						`${parts[0]}, ${parts[1].trim()} at ${parts[2].trim()}` :
						formattedDate;
					element.textContent = finalDate;
				});
			</script>
			
			<div id="filter-modal" class="modal bg-slate-500/50">
				<div class="modal-dialog modal-dialog-centered" role="document">
					<div class="modal-content">
						<div class="modal-header align-items-center py-3">
							<h5 class="text-xl font-medium">Apply Filters</h5>
							<span class="close-modal text-2xl cursor-pointer" onclick="closeModal()">&times;</span>
						</div>
						<div class="modal-body">
							<!-- Modal Form -->
							<form class="space-y-5">
								<div class="space-y-2">
									<label for="templateSearch" class="block ">Search by template name</label>
									<input id="templateSearch" type="search" class="w-full border rounded-lg p-2 placeholder:text-gray-600" placeholder="Search template name here..." />
								</div>
								
								<div>
									<label for="categoryDropdown" class="block">Choose Category</label>
									<div class="dropdown py-1">
										<button id="categoryDropdown" class="btn w-100 p-2 border text-left" type="button" onclick="toggleDropdown()">
											Category
										</button>
										<div id="category-options" class="dropdown-options-filter hidden w-full border">
											<div class="dropdown-item-filter" onclick="selectCategory('Marketing')">Marketing</div>
											<div class="dropdown-item-filter" onclick="selectCategory('Utility')">Utility</div>
											<div class="dropdown-item-filter" onclick="selectCategory('Authentication')">Authentication</div>
										</div>
									</div>
								</div>
							</form>
						</div>
						<div class=" flex">
							<button type="button" class="text-white bg-red-400 hover:bg-red-500 p-2 rounded w-100" onclick="applyFilters()">
								Filter
							</button>
							<button type="button" class="text-red-400 underline hover:text-red-500 p-2 rounded w-100" onclick="location.href = '/template' ">
								Clear filters
							</button>
						</div>
					</div>
				</div>
			</div>
			
			
			<script>
				// Open Modal
				// Open Modal with opacity transition
				function openModal () {
					const modal = document.getElementById('filter-modal');
					modal.style.display = 'block';
					setTimeout(() => {
						modal.style.opacity = '1';
					}, 10); // Small delay to ensure display property is applied before opacity
				}
				
				// Close Modal with opacity transition
				function closeModal () {
					const modal = document.getElementById('filter-modal');
					modal.style.opacity = '0';
					setTimeout(() => {
						modal.style.display = 'none';
					}, 300); // Match this duration with the CSS transition duration
				}
				
				// Toggle Dropdown
				function toggleDropdown () {
					const dropdown = document.getElementById('category-options');
					dropdown.classList.toggle('hidden');
				}
				
				// Select Category and Update Button Text
				function selectCategory (category) {
					document.getElementById('categoryDropdown').innerText = category;
					toggleDropdown(); // Close the dropdown after selection
				}
				
				// Apply Filters Function (for future filter logic)
				async function applyFilters () {
					const templateName = document.getElementById('templateSearch').value;
					const category = document.getElementById('categoryDropdown').innerText;
					
					// You can add your logic here to apply filters
					console.log('Template Name:', templateName);
					console.log('Category:', category);
					location.href = `/template?search=${templateName}&category=${category}`;
					// Close modal after applying filters
					closeModal();
				}
				
				// Hide modal if clicked outside of it
				window.onclick = function (event) {
					const modal = document.getElementById('filter-modal');
					if (event.target == modal) {
						closeModal();
					}
				}
				
				const fileInput = document.getElementById("file-input");
				const fileList = document.getElementById("file-list");
				
				fileInput.addEventListener("change", function () {
					const files = fileInput.files;
					
					for (const file of files) {
						const fileItem = document.createElement("div");
						fileItem.classList.add("file-item");
						
						const fileStatus = document.createElement("div");
						fileStatus.classList.add("file-status");
						
						const fileName = document.createElement("span");
						fileName.textContent = file.name;
						fileName.classList.add("status-uploading");
						
						const loader = document.createElement("div");
						loader.classList.add("circular-loader");
						
						const statusText = document.createElement("span");
						statusText.textContent = "Uploading...";
						statusText.classList.add("status-uploading");
						
						const removeButton = document.createElement("span");
						removeButton.textContent = "✖";
						removeButton.classList.add("remove-file");
						removeButton.onclick = () => fileItem.remove();
						
						fileStatus.appendChild(loader);
						fileStatus.appendChild(fileName);
						fileStatus.appendChild(statusText);
						fileItem.appendChild(fileStatus);
						fileItem.appendChild(removeButton);
						fileList.appendChild(fileItem);
						
						setTimeout(() => {
							loader.remove();
							statusText.textContent = "Uploaded";
							statusText.classList.remove("status-uploading");
							statusText.classList.add("status-uploaded");
							
							const uploadedIcon = document.createElement("div");
							uploadedIcon.classList.add("uploaded-icon");
							uploadedIcon.textContent = "✔";
							
							fileStatus.prepend(uploadedIcon);
						}, 2000);
					}
				});
				
				async function getStatus () {
					const icon = document.querySelector(".fa-sync");
					try {
						icon.classList.add("animate-spin");
						const res = await fetch("/getFaceBookTemplates");
						const data = await res.json();
						if (!data.success) {
							alert(data.error);
						}
						location.reload();
					} catch (err) {
						alert(err);
					} finally {
						icon.classList.remove("animate-spin");
					}
				}
			</script>
		</div>
	</div>
	<!-- END PAGE CONTAINER -->
	
	
	<!-- BEGIN VENDOR JS -->
	<script src="assets/plugins/pace/pace.min.js" type="text/javascript"></script>
	<!--  A polyfill for browsers that don't support ligatures: remove liga.js if not needed-->
	<script src="assets/plugins/liga.js" type="text/javascript"></script>
	<script src="assets/plugins/jquery/jquery-3.2.1.min.js" type="text/javascript"></script>
	<script src="assets/plugins/modernizr.custom.js" type="text/javascript"></script>
	<script src="assets/plugins/jquery-ui/jquery-ui.min.js" type="text/javascript"></script>
	<script src="assets/plugins/popper/umd/popper.min.js" type="text/javascript"></script>
	<script src="assets/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
	<script src="assets/plugins/jquery/jquery-easy.js" type="text/javascript"></script>
	<script src="assets/plugins/jquery-unveil/jquery.unveil.min.js" type="text/javascript"></script>
	<script src="assets/plugins/jquery-ios-list/jquery.ioslist.min.js" type="text/javascript"></script>
	<script src="assets/plugins/jquery-actual/jquery.actual.min.js"></script>
	<script src="assets/plugins/jquery-scrollbar/jquery.scrollbar.min.js"></script>
	<script type="text/javascript" src="assets/plugins/select2/js/select2.full.min.js"></script>
	<script type="text/javascript" src="assets/plugins/classie/classie.js"></script>
	<script src="pages/js/pages.js"></script>
	<script src="assets/js/scripts.js" type="text/javascript"></script>
	<script src="assets/js/card.js" type="text/javascript"></script>
	<script src="assets/js/scripts.js" type="text/javascript"></script>
	<script>
		window.addEventListener('load', function () {
			// Fade out the loader smoothly by changing the opacity
			var loader = document.getElementById('loader');
			loader.style.transition = 'opacity 0.3s ease'; // Smooth fade out
			loader.style.opacity = '0';
			
			// Completely remove the loader after the fade-out effect is finished
			setTimeout(function () {
				loader.style.display = 'none'; // Ensure loader is no longer in the DOM flow
			}, 300); // Match the duration of the fade-out (0.5 seconds in this case)
		});
	</script>
	
	<!-- END PAGE LEVEL JS -->
</body>

</html>