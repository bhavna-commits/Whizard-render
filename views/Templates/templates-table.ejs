<div class="p-4">
	<!-- Responsive Table -->
	<div class="overflow-x-auto">
		<table class="min-w-full divide-y divide-gray-200 border-separate border-spacing-y-2">
			<thead class="bg-gray-100">
				<tr class="text-sm text-left font-medium text-gray-700 tracking-wider">
					<th class="px-6 py-3">Sno.</th>
					<th class="px-6 py-3">Template Name</th>
					<th class="px-6 py-3">Category</th>
					<!-- <th class="px-6 py-3">Language</th> -->
					<th class="px-6 py-3">Status</th>
					<th class="px-6 py-3">Actions</th>
				</tr>
			</thead>
			<tbody>
				<!-- Row 1 -->
				<% if (list) { %>
				<% list.forEach((list) => { %>
				<tr class="hover:bg-blue-100 border rounded-lg">
					<td class="px-6 py-4 text-sm text-gray-900">1</td>
					<td class="px-6 py-4">
						<a href="#" class="text-blue-600 hover:underline">
							<div>
								<p class="text-gray-900 font-semibold"><%= list.templateName %></p>
								<!-- Pass the raw createdAt timestamp -->
								<p class="text-gray-500 text-sm" id="createdAt-<%= list._id %>" data-timestamp="<%= list.createdAt %>"></p>
							</div>
							
						</a>
					</td>
					<td class="px-6 py-4 text-sm text-gray-900"><%= list.category %></td>
					<!-- <td class="px-6 py-4">
            <span class="inline-block px-2 py-1 text-xs font-semibold bg-yellow-200 text-yellow-800 rounded-full">Indonesia</span>
          </td> -->
					<td class="px-6 py-4">
						<span class="text-orange-500 font-semibold"><%= list.status %></span>
					</td>
					<td class="px-6 py-4">
						<!-- Duplicate Button -->
						<button type="button" class="text-gray-500 hover:text-gray-700 px-2" onclick="duplicateTemplate('<%= list._id %>')">
							<i class="fas fa-copy"></i>
						</button>
						
						<!-- Delete Button -->
						<button type="button" class="text-red-500 hover:text-red-700 px-2" onclick="confirmDelete('<%= list._id %>')">
							<i class="fas fa-trash"></i>
						</button>
					</td>
				</tr>
				<% }) %>
				<% } %>
			</tbody>
		</table>
	</div>
	
	<!-- Pagination -->
	<div class="flex justify-between items-center mt-4">
		<nav aria-label="Page navigation">
			<ul class="inline-flex items-center -space-x-px">
				<li>
					<a href="#" class="px-3 py-2 ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700">‹</a>
				</li>
				<li>
					<a href="#" class="px-3 py-2 leading-tight text-blue-600 border border-gray-300 bg-blue-50 hover:bg-blue-100 hover:text-blue-700">1</a>
				</li>
				<li>
					<a href="#" class="px-3 py-2 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700">2</a>
				</li>
				<li>
					<span class="px-3 py-2 leading-tight text-gray-500 bg-white border border-gray-300">...</span>
				</li>
				<li>
					<a href="#" class="px-3 py-2 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700">10</a>
				</li>
				<li>
					<a href="#" class="px-3 py-2 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700">›</a>
				</li>
			</ul>
		</nav>
		<div class="ml-4 flex items-center">
			<span class="mr-2 text-gray-600">Go to page</span>
			<input type="number" min="1" max="10" class="w-16 p-2 border border-gray-300 rounded-lg" value="1" />
			<button class="ml-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Go</button>
		</div>
	</div>
</div>

<script>
	// Helper function to format date in "29 Aug-2024 at 02:05 AM" format
	function formatTimestamp (timestamp) {
		const date = new Date(timestamp);
		const options = {
			day: '2-digit',
			month: 'short',
			year: 'numeric',
			hour: '2-digit',
			minute: '2-digit',
			hour12: true
		};
		
		// Format the date and time string
		let formattedDate = date.toLocaleString('en-GB', options);
		formattedDate = formattedDate.replace(',', ' at ');
		return formattedDate;
	}
	
	// Format all timestamps with the 'data-timestamp' attribute
	document.querySelectorAll('[data-timestamp]').forEach((element) => {
		const timestamp = element.getAttribute('data-timestamp');
		element.textContent = formatTimestamp(timestamp);
	});
	
	function duplicateTemplate (templateId) {
		fetch(`/api/templates/duplicate/${templateId}`, {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
			})
			.then((response) => response.json())
			.then((data) => {
				if (data.success) {
					// Redirect or refresh the page to see the duplicated template
					window.location.reload();
				} else {
					alert('Error duplicating template: ' + data.error);
				}
			})
			.catch((error) => console.error('Error:', error));
	}
	
	// Function to confirm deletion
	function confirmDelete (templateId) {
		if (confirm('Are you sure you want to delete this template?')) {
			fetch(`/api/templates/delete/${templateId}`, {
					method: 'DELETE',
					headers: {
						'Content-Type': 'application/json',
					},
				})
				.then((response) => response.json())
				.then((data) => {
					if (data.success) {
						window.location.reload();
					} else {
						alert('Error deleting template: ' + data.error);
					}
				})
				.catch((error) => console.error('Error:', error));
		}
	}
</script>