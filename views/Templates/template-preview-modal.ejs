<% if (templateData) { %>
<!-- Modal Container -->
<!-- Modal Container -->
<div id="customModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center hidden z-50">
	<div class="bg-white rounded-lg shadow-lg w-9/12 max-w-7xl h-[90%] overflow-auto">
		<!-- Modal Header -->
		<div class="flex justify-between items-center p-4 border-b">
			<h5 id="templateModalLabel" class="text-xl font-semibold">Template Name</h5>
			<button class="text-gray-500 hover:text-gray-700" id="modalCloseBtn">&times;</button>
		</div>
		
		<!-- Modal Body -->
		<div class="p-6 flex space-x-6">
			<!-- Left Side: Dynamic Attributes Form -->
			<form id="previewForm" class="w-[40%] space-y-4">
				<!-- Dynamic attributes will be inserted here -->
			</form>
			
			<!-- Right Side: iPhone Preview -->
			<div class="w-[60%] flex justify-center items-center border-l">
				<div class="iphone-container w-full max-w-xs">
					<div class="iphone-screen">
						<div class="card bg-gray-100 relative p-4">
							<!-- Preview Header -->
							<div class="bg-preview py-3 px-2 mt-3 z-50 relative" id="previewContainer">
								<div id="previewHeader"></div>
								<div class="text-lg leading-3" id="previewBody"></div>
								<div id="previewFooter"></div>
								<div id="previewButtons"></div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<!-- Modal Footer -->
		<div class="flex justify-end p-4 border-t">
			<button id="submitToFacebook" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">Submit</button>
		</div>
	</div>
</div>



<% } %>

<!-- JavaScript for Updating Preview -->
<!--    
	const templateData = <%- JSON.stringify(templateData) %>;
	
	function updatePreview () {
		const formData = {};
		
		// Loop through each input element and update formData based on entered value
		document.querySelectorAll('.input-variable').forEach(inputElement => {
			const variable = inputElement.getAttribute('data-variable');
			const index = inputElement.getAttribute('data-index'); // Get the index of the variable
			const enteredValue = inputElement.value || ''; // Get entered value
			formData[index] = enteredValue; // Store in formData by index
		});
		
		// Now update the preview based on formData
		updatePreviewContent(formData);
	}
	
	function updatePreviewContent (formData) {
		const previewHeader = document.getElementById("previewHeader");
		const previewBody = document.getElementById("previewBody");
		const previewFooter = document.getElementById("previewFooter");
		
		// Replace placeholders {0}, {1}, etc., with values from formData
		if (previewHeader) {
			previewHeader.innerHTML = previewHeader.innerHTML.replace(/\{(\d+)\}/g, (match, index) => {
				return formData[index] || match; // Replace with selected value or keep the placeholder
			});
		}
		
		if (previewBody) {
			previewBody.innerHTML = previewBody.innerHTML.replace(/\{(\d+)\}/g, (match, index) => {
				return formData[index] || match;
			});
		}
		
		if (previewFooter) {
			previewFooter.innerHTML = previewFooter.innerHTML.replace(/\{(\d+)\}/g, (match, index) => {
				return formData[index] || match;
			});
		}
	}
</script> -->