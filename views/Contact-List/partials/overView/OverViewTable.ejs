<div id="contactList" class="overflow-auto max-h-[83vh]">
	<% if (contacts && contacts.length > 0) { %>
	<div class="table-responsive relative">
		<table class="text-center min-w-full bg-white border-separate border-spacing-y-4">
			<tbody>
				<!-- Table Header -->
				<tr class="text-gray-400 sticky top-0 bg-white z-20">
					<td class="checkboxHead min-w-10 relative ">
						<div class="absolute inset-0 flex items-center justify-center px-2 pb-3">
							<div class="checkboxText transition-opacity duration-200 ease-in-out">Sno.</div>
							<input type="checkbox" class="checkbox transition-opacity duration-200 ease-in-out absolute" style="opacity: 0;" />
						</div>
					</td>
					<td class="min-w-[10rem] px-2 pb-3">Name</td>
					<td class="min-w-[10rem] px-2 pb-3">Number</td>
					<td class="min-w-[10rem] px-2 pb-3">Created at</td>
					<% if (contacts[0]?.masterExtra) { %>
					<% Object.keys(contacts[0].masterExtra).forEach(function(key) { %>
					<td class="min-w-[10rem] text-gray-400 px-2 pb-3"><%= key %></td>
					<% }); %>
					<% } %>
					<td class="sticky right-0 min-w-[10rem] bg-white px-2 pb-3 z-20">Actions</td>
				</tr>
				
				<!-- Table Rows -->
				<% contacts.forEach((contact, index) => { %>
				<tr data-wa_id="<%= contact?.wa_id %>" class=" border group hover:bg-gray-100 ">
					<td class="border-l border-t border-b rounded-l py-8 min-w-6 min-h-6 border-gray-200 text-sm text-gray-400 checkboxBody relative">
						<div class="absolute inset-0 flex items-center justify-center">
							<div class="checkboxText block"><%= (page - 1) * 6 + (index + 1) %></div>
							<input type="checkbox" class="checkbox max-h-4 max-w-4 absolute opacity-0 pointer-events-none transition-opacity duration-200" />
						</div>
					</td>
					<td class="border-t border-b border-gray-200 ">
						<p class="text-gray-500"><%= contact?.Name %></p>
					</td>
					<td class="text-gray-500 border-t border-b border-gray-200 " aria-label="<%= contact?.wa_id %>">
						XXXXX-XXX<%= contact?.wa_id?.slice(-2) %>
					</td>
					<td class="text-gray-500 border-t border-b border-gray-200  date-cell" data-date="<%= contact.usertimestmp %>"></td>
					
					<% if (contact.masterExtra) { %>
					<% Object.entries(contact.masterExtra).forEach(function([key, value]) { %>
					<td class="text-gray-500 border-t border-b border-gray-200 ">
						<%= value %>
					</td>
					<% }); %>
					<% } %>
					
					<td class="sticky right-0 z-10 border-r border-t border-b rounded-r border-gray-200  backdrop-blur-sm">
						<% if (access?.contactList?.editContactIndividual) { %>
						<button onclick="openEditModal('<%= JSON.stringify(contact) %>')" aria-label="Edit contact" title="Edit contact" class="text-gray-600 hover:text-blue-600 px-3 border-r">
							<img src="svg/editPen.svg" alt="edit">
						</button>
						<% } else { %>
						<button title="You don't have permissions to access this" class="text-gray-400 hover:cursor-not-allowed px-3 border-r">
							<img src="svg/editPen.svg" alt="edit">
						</button>
						<% } %>
						<% if (access?.contactList?.deleteContactIndividual) { %>
						<button onclick="openDeleteModal('<%= contact._id %>','<%= contact.Name %>' )" title="Delete Contact" class="text-gray-600 hover:text-red-600 px-2">
							<img src="svg/bin contact list.svg" alt="bin">
						</button>
						<% } else { %>
						<button title="You don't have permissions to access this" class="text-gray-400 hover:cursor-not-allowed px-2">
							<img src="svg/bin contact list.svg" alt="bin">
						</button>
						<% } %>
					</td>
				</tr>
				<% }); %>
			</tbody>
		</table>
		<div class=" flex items-center sticky bottom-4">
			<div id="selectionBar" class="opacity-0 sticky bottom-4 left-0 z-30 mt-4 flex items-center gap-8 justify-between p-3 rounded-md border border-gray-200 shadow bg-white max-w-sm">
				<span class="text-sm text-gray-700"><span id="selectedCount">0</span> selected</span>
				<div class="flex gap-4">
					<button id="clearSelection" class="text-sm px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-100">Clear</button>
					<button id="sendBroadcast" class="text-sm px-4 py-2 bg-black text-white rounded-md hover:bg-gray-900">Send Broadcast</button>
				</div>
			</div>
			
			<% if (page < totalPages) { %>
			<button id="loadMoreBtn" class="mt-4 px-4 py-2 sticky bottom-4 left-[45%] z-30 bg-red-600 text-white rounded hover:bg-red-700">
				Load More
			</button>
			<% } %>
		</div>	
	</div>
</div>


<script>
	const contact = <%- JSON.stringify(contacts[0]) %>;
</script>


<% } else { %>
<!-- Empty state -->
<div class="flex flex-col items-center justify-center min-h-[400px]  rounded-lg mt-4">
	<div class="text-center">
		<img src="https://img.freepik.com/free-vector/hands-holding-tablet-with-forefinger-clicking-start-button-new-application-launch-flat-illustration_74855-20595.jpg?ga=GA1.1.131490893.1732525963&semt=ais_hybrid" alt="No contacts" class="w-48 h-48 mx-auto mb-4">
		
		<h3 class="text-xl font-semibold text-gray-900 mb-2">No contacts yet</h3>
		<p class="text-gray-600 mb-6">Start adding contacts by clicking on "Add Contact"</p>
		<button onclick="openAddContact()" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black">
			<i class="fa-solid fa-user-plus pr-2"></i>
			Add Contact
		</button>
	</div>
</div>
<% } %>

<script>
	let currentPage = <%= page %>;
	const totalPage = <%= totalPages %>;
	
	// Delete confirmation logic
	
	
	function openAddContact () {
		document.getElementById("addContactSidebar").classList.add("open");
		document.getElementById("overlay").classList.add("active");
	}
	
	function closeAddContact () {
		document.getElementById("addContactSidebar").classList.remove("open");
		document.getElementById("overlay").classList.remove("active");
	}
	
	function openEditModal (contactData) {
		const contact = JSON.parse(contactData);
		document.getElementById("edit-contact-id").value = contact._id;
		document.getElementById("edit-contact-name").value = contact.Name;
		
		const dynamicFieldsContainer = document.getElementById(
			"dynamicFieldsContainer",
		);
		dynamicFieldsContainer.innerHTML = ""; // Clear previous fields
		
		Object.keys(contact.masterExtra).forEach((key) => {
			if (!document.getElementById(`edit-contact-${key}`)) {
				const formGroup = document.createElement("div");
				formGroup.classList.add("form-group");
				
				const label = document.createElement("label");
				label.setAttribute("for", `edit-contact-${key}`);
				label.textContent = key.charAt(0).toUpperCase() + key.slice(1);
				
				const input = document.createElement("input");
				input.setAttribute("type", "text");
				input.setAttribute("id", `edit-contact-${key}`);
				input.setAttribute("name", `masterExtra.${key}`);
				input.setAttribute("class", "date-input");
				
				// Set required attribute using either method:
				input.setAttribute("required", ""); // or input.required = true;
				
				input.value = contact.masterExtra[key];
				
				formGroup.appendChild(label);
				formGroup.appendChild(input);
				dynamicFieldsContainer.appendChild(formGroup);
			}
			
		});
		
		document.getElementById("editContactSidebar").classList.add("open");
		document.getElementById("editContactOverlay").classList.add("active");
	}
	// Close edit contact modal
	function closeEditContact () {
		document.getElementById("editContactSidebar").classList.remove("open");
		document.getElementById("editContactOverlay").classList.remove("active");
	}
	
	function openDeleteModal (id) {
		const deleteModal = new bootstrap.Modal(
			document.getElementById("deleteModal"),
		);
		deleteModal.show();
	}
	
	function closeDeleteContact (id) {
		const deleteModal = new bootstrap.Modal(
			document.getElementById("deleteModal"),
		);
		deleteModal.hide();
	}
	
	document.querySelectorAll('.date-cell').forEach((el) => {
		const rawDate = el.getAttribute('data-date');
		if (rawDate) {
			const date = new Date(Number(rawDate));
			const formatted = date.toLocaleString('en-GB', {
				year: 'numeric',
				month: 'short',
				day: '2-digit',
			});
			el.textContent = formatted;
		}
	});
</script>