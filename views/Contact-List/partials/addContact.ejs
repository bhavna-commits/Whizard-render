<!-- Edit Contact Sidebar -->
<!-- Overlay for the sidebar -->
<div class="overlay" id="overlay" onclick="closeAddContact()"></div>

<!-- Sidebar structure for adding new contact -->
<div class="filter-sidebar overflow-scroll" id="addContactSidebar">
	<div class="filter-header">
		<h2>Add New Contact</h2>
		<button class="close-btn" onclick="closeAddContact()">&times;</button>
	</div>
	
	<div class="filter-section">
		<form id="addContactForm">
			<div class="form-group">
				<label for="contactName">Name</label>
				<input type="text" id="contactName" name="Name" class="date-input" placeholder="Enter name" required>
			</div>
			<div class="form-group">
				<label for="contactNumber">Phone Number</label>
				<input type="text" id="contactNumber" name="wa_id" class="date-input" placeholder="Enter phone number" required>
			</div>
			<% if (tags.length > 0) { %>
			<div class="form-group">
				<label for="contactTags">Tags</label>
				<select id="contactTags" name="tags" class="date-input" required>
					<% tags?.forEach(function(tag) { %>
					<option value="<%= tag %>" <%= contact?.tags === tag ? 'selected' : '' %>><%= tag %></option>
					<% }); %>
				</select>
			</div>
			<% } %>
			<!-- Additional fields if they come from the backend -->
			<% if (contacts[0]?.masterExtra) { %>
			<% Object.keys(contacts[0].masterExtra).forEach(function(key) { %>
			<div class="form-group">
				<label for="<%= key %>"><%= key %></label>
				<input type="text" id="<%= key %>" name="<%= key %>" class="date-input" placeholder="<%= key %>" required>
			</div>
			<% }); %>
			<% } %>
			
			<button type="submit" class="apply-btn">Add Contact</button>
		</form>
	</div>
</div>

<script>
	document
		.getElementById("addContactForm")
		.addEventListener("submit", function (event) {
			event.preventDefault(); // Prevent default form submission
			console.log("here");
			
			// Collect the form data
			const formData = new FormData(this);
			
			// Extract contactId from the URL
			const contactId = window.location.pathname.split("/").pop();
			console.log(contactId);
			
			// Append contactId to formData
			formData.append("contactId", contactId);
			
			const saveButton = this.querySelector("button[type='submit']");
			const originalButtonText = saveButton.innerHTML;
			saveButton.disabled = true; // Disable button to prevent double submission
			saveButton.innerHTML =
				'<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...';
			
			// Perform the POST request to add the new contact
			fetch(`/api/contact-list/contacts/create-contact`, {
					method: "POST",
					body: formData,
				})
				.then((response) => response.json())
				.then((data) => {
					if (data.success) {
						console.log(data.contact);
						location.reload();
						// Optionally reload or update the UI after successful submission
					} else {
						// Show error message
						saveButton.innerHTML = originalButtonText; // Reset button text
						saveButton.disabled = false;
						const errorMessage = document.createElement("div");
						errorMessage.className = "text-danger mt-2";
						errorMessage.innerText =
							"Error adding contact: " + data.message;
						saveButton.parentNode.appendChild(errorMessage);
					}
				})
				.catch((err) => {
					// Handle any network or other errors
					console.error("Error:", err);
					saveButton.innerHTML = originalButtonText; // Reset button text
					saveButton.disabled = false;
					const errorMessage = document.createElement("div");
					errorMessage.className = "text-danger mt-2";
					errorMessage.innerText = "An error occurred. Please try again.";
					saveButton.parentNode.appendChild(errorMessage);
				});
		});
</script>