<div class="overlay" id="editContactOverlay" onclick="closeEditContact()"></div>

<div class="filter-sidebar overflow-scroll" id="editContactSidebar">
	<div class="filter-header">
		<h2>Edit Contact</h2>
		<button class="close-btn" onclick="closeEditContact()">&times;</button>
	</div>
	
	<div class="filter-section">
		<form id="editContactForm">
			<input type="hidden" id="edit-contact-id" name="keyId">
			
			<div class="form-group">
				<label for="edit-contact-name">Name</label>
				<input type="text" id="edit-contact-name" name="Name" class="date-input" required>
			</div>
			
			<div class="input-group flex items-center focus:outline-none" id="countrySelector">
				<label for="contactNumber">Phone Number</label>
				
				<div class="country-dropdown hidden" id="countryDropdown">
					<div class="search-container focus:outline-none">
						<input type="text" id="countrySearch" placeholder="Search country or code..." />
					</div>
					<div class="countries-list">
						<% countries.forEach(function(country) { %>
						<button type="button" class="country-option focus:outline-none">
							<span class="country-flag"><%= country.flag %></span>
							<span class="country-name"><%= country.name %></span>
							<span class="country-dial-code"><%= country.dialCode %></span>
						</button>
						<% }); %>
					</div>
				</div>
				
				<div class="date-input flex items-center">
					<button type="button" class="w-16 flex items-center" id="countrySelectorButton">
						<span id="selectedFlag" class="">ðŸ‡®ðŸ‡³</span>&nbsp;
						<input type="text" name="countryCode" class="cursor-pointer" id="selectedDialCode" value="+91" readonly />
					</button>
					<input type="tel" id="phone" name="wa_id" class="w-full" placeholder="Enter WhatsApp number" minlength="10" maxlength="15" pattern="[0-9]{10,15}" required />
					<small id="phone-error" class="error-message text-red-500" style="display: none;"></small>
				</div>
			</div>
			
			<div class="form-group">
				<label for="edit-contact-tags">Tags</label>
				<select id="edit-contact-tags" name="tags" class="date-input" required>
					<option>Sample Tag</option>
				</select>
			</div>
			
			<div id="dynamicFieldsContainer"></div>
			
			<button type="submit" class="apply-btn">Save Changes</button>
		</form>
	</div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
			</div>
			<div class="modal-body">
				Are you sure you want to delete this contact from the list?
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" onclick="closeDeleteContact()">Cancel</button>
				<button type="button" class="btn btn-danger" id="confirmDeleteBtn">Yes, Delete</button>
			</div>
		</div>
	</div>
</div>

<script>
	countrySelectorButton.addEventListener("click", function (e) {
		e.preventDefault();
		countryDropdown.classList.toggle("hidden");
	});
	
	countryOptions.forEach((option) => {
		option.addEventListener("click", function () {
			const flag = this.querySelector(".country-flag").textContent;
			const dialCode = this.querySelector(".country-dial-code").textContent;
			selectedFlag.textContent = flag;
			selectedDialCode.value = dialCode;
			countryDropdown.classList.add("hidden");
		});
	});
	
	countrySearch.addEventListener("input", function () {
		const searchValue = this.value.toLowerCase();
		countryOptions.forEach((option) => {
			const countryName = option
				.querySelector(".country-name")
				.textContent.toLowerCase();
			const dialCode = option
				.querySelector(".country-dial-code")
				.textContent.toLowerCase();
			option.style.display =
				countryName.includes(searchValue) || dialCode.includes(searchValue) ?
				"flex" :
				"none";
		});
	});
	
	document.addEventListener("click", function (e) {
		if (
			!countrySelectorButton.contains(e.target) &&
			!countryDropdown.contains(e.target)
		) {
			countryDropdown.classList.add("hidden");
		}
	});
	
	
	document
		.getElementById("editContactForm")
		.addEventListener("submit", function (event) {
			event.preventDefault();
			const contactId = document.getElementById("edit-contact-id").value;
			let formData = new FormData(this);
			
			const saveButton = this.querySelector("button[type='submit']");
			const originalButtonText = saveButton.innerHTML;
			saveButton.disabled = true;
			saveButton.innerHTML =
				'<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...';
			
			fetch(`/api/contact-list/contacts/${contactId}`, {
					method: "PUT",
					body: formData,
				})
				.then((response) => response.json())
				.then((data) => {
					if (data.success) {
						location.reload();
					} else {
						saveButton.innerHTML = originalButtonText;
						saveButton.disabled = false;
						const errorMessage = document.createElement("div");
						errorMessage.className = "text-danger mt-2";
						errorMessage.innerText =
							"Error updating contact: " + data.message;
						saveButton.parentNode.appendChild(errorMessage);
					}
				})
				.catch((err) => {
					saveButton.innerHTML = originalButtonText;
					saveButton.disabled = false;
					const errorMessage = document.createElement("div");
					errorMessage.className = "text-danger mt-2";
					errorMessage.innerText = "An error occurred. Please try again.";
					saveButton.parentNode.appendChild(errorMessage);
				});
		});
	
	// Delete confirmation logic
	
	
	document.getElementById("confirmDeleteBtn").onclick = function () {
		fetch(`/api/contact-list/contacts/${id}`, {
				method: "DELETE",
			})
			.then((response) => response.json())
			.then((data) => {
				if (data.success) {
					deleteModal.hide();
					location.reload();
				} else {
					alert("Error deleting contact: " + data.message);
				}
			})
			.catch((err) => console.error("Error:", err));
	};
</script>