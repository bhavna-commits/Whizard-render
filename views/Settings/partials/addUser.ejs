<div id="addUserModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full transition-opacity duration-300 ease-in-out" onclick="closeModal()">
	<!-- Modal content container with stopPropagation to prevent closing when clicked inside -->
	<div class="relative top-[20%] mx-auto p-7 border w-[600px] shadow-lg rounded-md bg-white transition-transform transform opacity-0 scale-95" onclick="event.stopPropagation()">
		<div class="mt-3 space-y-5">
			<h3 class="text-2xl font-semibold leading-6 text-center text-gray-900">Add new user</h3>
			<div class="mt-2 ">
				<form id="addUserForm">
					<div class="mb-4">
						<label class="block text-gray-500 mb-2">User Name</label>
						<input type="text" id="userName" name="userName" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-500 leading-tight focus:outline-none focus:shadow-outline" placeholder="What is name of user">
					</div>
					<div class="mb-4">
						<label class="block text-gray-500 mb-2">Email</label>
						<input type="email" id="userEmail" name="userEmail" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-500 leading-tight focus:outline-none focus:shadow-outline" placeholder="Enter email address">
					</div>
					<div class="mb-4">
						<label class="block text-gray-500 mb-2">Role</label>
						<div class="select-wrapper">
							<select id="userRole" name="userRole" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-500 leading-tight focus:outline-none focus:shadow-outline">
								<option value="">Select role</option>
								<% permissions.forEach(function(permission) { %>
								<option value="<%= permission.name %>"><%= permission.name %></option>
								<% }); %>
							</select>
						</div>
					</div>
					<div class="flex items-center justify-between mt-5">
						<button type="submit" id="inviteButton" class="bg-black hover:bg-gray-800 text-white py-2 px-4 rounded focus:outline-none focus:shadow-outline flex items-center justify-center">
							Invite
						</button>
						<button type="button" onclick="closeModal()" class="bg-gray-300 hover:bg-gray-400 text-gray-800 py-2 px-4 rounded focus:outline-none focus:shadow-outline">
							Cancel
						</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>

<script>
	const permissions = <%- JSON.stringify(permissions) %>;
	
	function openModal () {
		// Show modal with fade and scale effect
		const modal = document.getElementById('addUserModal');
		const modalContent = modal.querySelector('.relative');
		
		modal.classList.remove('hidden');
		modal.classList.add('opacity-100');
		modalContent.classList.add('scale-100', 'opacity-100'); // Add scale and opacity transition
	}
	
	function closeModal () {
		// Hide modal with fade and scale effect
		const modal = document.getElementById('addUserModal');
		const modalContent = modal.querySelector('.relative');
		
		modal.classList.add('hidden');
		modal.classList.remove('opacity-100');
		modalContent.classList.remove('scale-100', 'opacity-100');
	}
	
	document.getElementById('addUserForm').addEventListener('submit', async (e) => {
		e.preventDefault();
		const role = document.getElementById('userRole').value;
		const permission = permissions.find(p => p.name === role);
		const formData = {
			name: document.getElementById('userName').value,
			email: document.getElementById('userEmail').value,
			roleId: permission.unique_id,
			roleName: role,
			url: window.location.origin
		};
		
		// Show spinner and hide the button text
		document.getElementById('inviteButton').innerHTML = `
		<svg class="animate-spin -ml-1 mr-3 h-5 w-5 inline-block text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
			<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
			<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
		</svg>
		Sending Invite...
		`;
		
		try {
			const response = await fetch('/api/settings/user-management/invite', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(formData)
			});
			
			if (response.ok) {
				toast("success", 'Invitation sent successfully!');
				location.href = "/settings/user-management";
			} else {
				const error = await response.json();
				toast("error", error.message || 'Error occurred');
			}
		} catch (error) {
			toast("error", error.message);
		} finally {
			// Hide spinner and show the button text again
			document.getElementById('inviteButton').innerHTML = "Invite";
			
		}
	});
</script>