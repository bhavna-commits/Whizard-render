<div id="passwordModal" class="hidden fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center">
	<div class="bg-white p-8 rounded-lg shadow-lg max-w-lg w-full">
		<h2 class="text-2xl font-semibold mb-4">Change Password</h2>
		
		<!-- Password Change Form -->
		<form id="passwordChangeForm">
			
			<!-- Current Password -->
			<div class="mb-4 relative">
				<label for="currentPassword" class="block text-base font-medium text-gray-700">Current Password *</label>
				<input type="password" id="currentPassword" class="w-full p-2 border rounded-lg mt-1 focus:ring focus:ring-blue-500" autocomplete="new-password" required>
				<span class="absolute right-3 top-11 cursor-pointer">
					<!-- <i class="fa-regular fa-eye hidden" id="showCurrentPassword"></i>
					<i class="fa-regular fa-eye-slash" id="hideCurrentPassword"></i> -->
					<span id="hideCurrentPassword" style="cursor: pointer; width: fit-content;">
						<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="18px" fill="#9ca3af">
							<path d="m644-428-58-58q9-47-27-88t-93-32l-58-58q17-8 34.5-12t37.5-4q75 0 127.5 52.5T660-500q0 20-4 37.5T644-428Zm128 126-58-56q38-29 67.5-63.5T832-500q-50-101-143.5-160.5T480-720q-29 0-57 4t-55 12l-62-62q41-17 84-25.5t90-8.5q151 0 269 83.5T920-500q-23 59-60.5 109.5T772-302Zm20 246L624-222q-35 11-70.5 16.5T480-200q-151 0-269-83.5T40-500q21-53 53-98.5t73-81.5L56-792l56-56 736 736-56 56ZM222-624q-29 26-53 57t-53 67q50 101 143.5 160.5T480-280q20 0 39-2.5t39-5.5l-36-38q-11 3-21 4.5t-21 1.5q-75 0-127.5-52.5T300-500q0-11 1.5-21t4.5-21l-84-82Zm319 93Zm-151 75Z" />
						</svg>
					</span>
					<!-- Not visible (slashed eye) icon -->
					<span id="showCurrentPassword" class="hidden" style="cursor: pointer; width: fit-content;">
						<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="18px" fill="#9ca3af">
							<path d="M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z" />
						</svg>
					</span>
				</span>
			</div>
			
			<!-- New Password -->
			<div class="mb-4 relative">
				<label for="newPassword" class="block text-base font-medium text-gray-700">New Password *</label>
				<input type="password" id="newPassword" class="w-full p-2 border rounded-lg mt-1 focus:ring focus:ring-blue-500" autocomplete="new-password" required>
				<span class="absolute right-3 top-11 cursor-pointer">
					<!-- <i class="fa-regular fa-eye hidden" id="showNewPassword"></i>
					<i class="fa-regular fa-eye-slash" id="hideNewPassword"></i> -->
					<span id="hideNewPassword" style="cursor: pointer; width: fit-content;">
						<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="18px" fill="#9ca3af">
							<path d="m644-428-58-58q9-47-27-88t-93-32l-58-58q17-8 34.5-12t37.5-4q75 0 127.5 52.5T660-500q0 20-4 37.5T644-428Zm128 126-58-56q38-29 67.5-63.5T832-500q-50-101-143.5-160.5T480-720q-29 0-57 4t-55 12l-62-62q41-17 84-25.5t90-8.5q151 0 269 83.5T920-500q-23 59-60.5 109.5T772-302Zm20 246L624-222q-35 11-70.5 16.5T480-200q-151 0-269-83.5T40-500q21-53 53-98.5t73-81.5L56-792l56-56 736 736-56 56ZM222-624q-29 26-53 57t-53 67q50 101 143.5 160.5T480-280q20 0 39-2.5t39-5.5l-36-38q-11 3-21 4.5t-21 1.5q-75 0-127.5-52.5T300-500q0-11 1.5-21t4.5-21l-84-82Zm319 93Zm-151 75Z" />
						</svg>
					</span>
					<!-- Not visible (slashed eye) icon -->
					<span id="showNewPassword" class="hidden" style="cursor: pointer; width: fit-content;">
						<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="18px" fill="#9ca3af">
							<path d="M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z" />
						</svg>
					</span>
				</span>
				<div class="mt-2 text-base text-gray-600 space-y-1">
					<p id="charLength" class="text-red-600"></p>
					<p id="lowercase" class="text-red-600"></p>
					<p id="uppercase" class="text-red-600"></p>
					<p id="number" class="text-red-600"></p>
					<p id="specialChar" class="text-red-600"></p>
				</div>
			</div>
			
			<!-- Confirm Password -->
			<div class="mb-4 relative">
				<label for="confirmPassword" class="block text-base font-medium text-gray-700">Confirm New Password *</label>
				<input type="password" id="confirmPassword" class="w-full p-2 border rounded-lg mt-1 focus:ring focus:ring-blue-500" autocomplete="new-password" required>
				<span class="absolute right-3 top-11 cursor-pointer">
					<!-- <i class="fa-regular fa-eye hidden" id="showConfirmPassword"></i>

					<i class="fa-regular fa-eye-slash" id="hideConfirmPassword"></i> -->
					
					<span id="hideConfirmPassword" style="cursor: pointer; width: fit-content;">
						<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="18px" fill="#9ca3af">
							<path d="m644-428-58-58q9-47-27-88t-93-32l-58-58q17-8 34.5-12t37.5-4q75 0 127.5 52.5T660-500q0 20-4 37.5T644-428Zm128 126-58-56q38-29 67.5-63.5T832-500q-50-101-143.5-160.5T480-720q-29 0-57 4t-55 12l-62-62q41-17 84-25.5t90-8.5q151 0 269 83.5T920-500q-23 59-60.5 109.5T772-302Zm20 246L624-222q-35 11-70.5 16.5T480-200q-151 0-269-83.5T40-500q21-53 53-98.5t73-81.5L56-792l56-56 736 736-56 56ZM222-624q-29 26-53 57t-53 67q50 101 143.5 160.5T480-280q20 0 39-2.5t39-5.5l-36-38q-11 3-21 4.5t-21 1.5q-75 0-127.5-52.5T300-500q0-11 1.5-21t4.5-21l-84-82Zm319 93Zm-151 75Z" />
						</svg>
					</span>
					<!-- Not visible (slashed eye) icon -->
					<span id="showConfirmPassword" class="hidden" style="cursor: pointer; width: fit-content;">
						<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="18px" fill="#9ca3af">
							<path d="M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z" />
						</svg>
					</span>
				</span>
			</div>
			
			<!-- Logout from all devices -->
			<div class="mb-4 flex items-center">
				<input type="checkbox" id="logoutDevices" class="h-4 w-4 text-blue-600 border-gray-300 rounded">
				<label for="logoutDevices" class="ml-2 pt-2 block text-base text-gray-900">Logout from all devices</label>
			</div>
			
			<!-- Modal Buttons -->
			<div class="flex justify-between">
				<button type="button" id="closeModalBtn" class="px-4 py-2 bg-gray-200 hover:bg-gray-300 text-gray-800 rounded-lg">Cancel</button>
				<button type="submit" id="savePasswordBtn" class="px-4 py-2 bg-gray-700 hover:bg-black text-white rounded-lg text-center flex items-center justify-center">
					<span id="saveBtnText" class="">Save Password</span>
					<span id="saveBtnLoading" class="hidden spinner animate-spin h-6 w-6 rounded-full border-4 border-t-white border-r-white border-b-white border-l-rose-500"></span>
				</button>
			</div>
		</form>
	</div>
</div>

<script>
	// Toggle modal visibility
	const openModalBtn = document.getElementById('openModalBtn');
	const closeModalBtn = document.getElementById('closeModalBtn');
	const passwordModal = document.getElementById('passwordModal');
	
	openModalBtn?.addEventListener('click', () => {
		passwordModal.classList.remove('hidden');
	});
	
	closeModalBtn?.addEventListener('click', () => {
		passwordModal.classList.add('hidden');
	});
	
	// Password validation
	const newPassword = document.getElementById('newPassword');
	const confirmPassword = document.getElementById('confirmPassword');
	const charLength = document.getElementById('charLength');
	const lowercase = document.getElementById('lowercase');
	const uppercase = document.getElementById('uppercase');
	const number = document.getElementById('number');
	const specialChar = document.getElementById('specialChar');
	
	newPassword?.addEventListener('input', (e) => {
		const value = e.target.value;
		
		if (value.length >= 8) {
			charLength.classList.add('text-green-600');
			charLength.classList.remove('text-red-600');
			charLength.innerHTML = '✔ At least 8 characters';
		} else {
			charLength.classList.add('text-red-600');
			charLength.classList.remove('text-green-600');
			charLength.innerHTML = '✘ At least 8 characters';
		}
		
		if (/[a-z]/.test(value)) {
			lowercase.classList.add('text-green-600');
			lowercase.classList.remove('text-red-600');
			lowercase.innerHTML = '✔ One lowercase letter';
		} else {
			lowercase.classList.add('text-red-600');
			lowercase.classList.remove('text-green-600');
			lowercase.innerHTML = '✘ One lowercase letter';
		}
		
		if (/[A-Z]/.test(value)) {
			uppercase.classList.add('text-green-600');
			uppercase.classList.remove('text-red-600');
			uppercase.innerHTML = '✔ One uppercase letter';
		} else {
			uppercase.classList.add('text-red-600');
			uppercase.classList.remove('text-green-600');
			uppercase.innerHTML = '✘ One uppercase letter';
		}
		
		if (/[0-9]/.test(value)) {
			number.classList.add('text-green-600');
			number.classList.remove('text-red-600');
			number.innerHTML = '✔ One number';
		} else {
			number.classList.add('text-red-600');
			number.classList.remove('text-green-600');
			number.innerHTML = '✘ One number';
		}
		
		if (/[\W_]/.test(value)) {
			specialChar.classList.add('text-green-600');
			specialChar.classList.remove('text-red-600');
			specialChar.innerHTML = '✔ One special character';
		} else {
			specialChar.classList.add('text-red-600');
			specialChar.classList.remove('text-green-600');
			specialChar.innerHTML = '✘ One special character';
		}
		
		if (value.length < 1) {
			specialChar.innerHTML = '';
			number.innerHTML = '';
			uppercase.innerHTML = '';
			lowercase.innerHTML = '';
			charLength.innerHTML = '';
		}
	});
	
	// Form submit handler
	document.getElementById('passwordChangeForm').addEventListener('submit', async (e) => {
		e.preventDefault();
		
		// Form validation: Check if new password and confirm password match
		if (newPassword.value !== confirmPassword.value) {
			toast("error", "New password and confirm password don't match");
			return;
		}
		
		// Disable save button and show loading
		const savePasswordBtn = document.getElementById('savePasswordBtn');
		const saveBtnText = document.getElementById('saveBtnText');
		const saveBtnLoading = document.getElementById('saveBtnLoading');
		
		savePasswordBtn.disabled = true;
		saveBtnText.classList.add('hidden');
		saveBtnLoading.classList.remove('hidden');
		
		// Send request to backend
		try {
			const response = await fetch('/api/settings/update-password', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({
					currentPassword: document.getElementById('currentPassword').value,
					newPassword: newPassword.value,
					logoutDevices: document.getElementById('logoutDevices').checked,
				}),
			});
			
			const data = await response.json();
			if (data.success) {
				toast("success", data.message);
				location.reload();
			} else {
				toast("error", data.message || 'An error occurred');
			}
		} catch (error) {
			toast("error", error.message || error);
		} finally {
			// Re-enable save button and hide loading
			savePasswordBtn.disabled = false;
			saveBtnText.classList.remove('hidden');
			saveBtnLoading.classList.add('hidden');
		}
	});
	
	// Toggle password visibility
	function togglePasswordVisibility (inputId, showIconId, hideIconId) {
		const passwordInput = document.getElementById(inputId);
		const showIcon = document.getElementById(showIconId);
		const hideIcon = document.getElementById(hideIconId);
		
		if (passwordInput.type === 'password') {
			passwordInput.type = 'text';
			showIcon.classList.remove('hidden');
			hideIcon.classList.add('hidden');
		} else {
			passwordInput.type = 'password';
			showIcon.classList.add('hidden');
			hideIcon.classList.remove('hidden');
		}
	}
	
	// Event listeners for toggling password visibility
	document.getElementById('showCurrentPassword')?.addEventListener('click', () => {
		togglePasswordVisibility('currentPassword', 'showCurrentPassword', 'hideCurrentPassword');
	});
	document.getElementById('hideCurrentPassword')?.addEventListener('click', () => {
		togglePasswordVisibility('currentPassword', 'showCurrentPassword', 'hideCurrentPassword');
	});
	
	document.getElementById('showNewPassword')?.addEventListener('click', () => {
		togglePasswordVisibility('newPassword', 'showNewPassword', 'hideNewPassword');
	});
	document.getElementById('hideNewPassword')?.addEventListener('click', () => {
		togglePasswordVisibility('newPassword', 'showNewPassword', 'hideNewPassword');
	});
	
	document.getElementById('showConfirmPassword')?.addEventListener('click', () => {
		togglePasswordVisibility('confirmPassword', 'showConfirmPassword', 'hideConfirmPassword');
	});
	document.getElementById('hideConfirmPassword')?.addEventListener('click', () => {
		togglePasswordVisibility('confirmPassword', 'showConfirmPassword', 'hideConfirmPassword');
	});
</script>